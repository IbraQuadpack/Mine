from datetime import datetime
from openpyxl import Workbook
from calendar import monthrange

# # time = '2020-03-17 22:40:55'
# # year = time[:4]
# # month = time[5:7]
# # day = time[8:11]
# # ss = month + str(int(year)-2000)
# #dest_filename = "OTR.xlsx"
# #ws1 = wb.active
# #ws1.title = "prova"
#
#
# name = ['timestamp', 'Feedback_V101', 'Pot_cremador', 'Feedback_V002', 'TE101', 'TE105', 'TE107', 'TE108', 'TE111','TE112',
#   'TE113','PT102','PT103','PT104','PT109','Estat_OTR','V101','V102','V001','V011','V012','V013','V021','V022','V023',
#   'V031','V032','V033','V401','V402','V403','V404','V405','V406','V407','V408','Estat_linies','Estat_filtres','lm',
#   'PC_103_104','PC_102_109']
#
# # example = [[datetime.datetime(2020, 3, 17, 22, 40, 55), 0.0, 100.0, 17.1, 74.78, 833.52, 37.94, 67.15, 51.76, 51.33, -34.48, 271.71, 5.76,
# #             -96.93, 6.0, 2.0, 2.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 3.0, 0.0, -306.18],
# #            [datetime.datetime(2020, 3, 17, 22, 40, 58), 0.0, 100.0, 16.57, 73.23, 833.12, 37.71, 66.71, 51.16, 51.14, -34.38, 292.91, 4.55, -85.38,
# #             6.0, 2.0, 2.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 3.0, 0.0, -327.28],
# #            [datetime.datetime(2020, 3, 17, 22, 41, 1), 0.0, 100.0, 16.59, 71.38, 832.63, 37.37, 66.27, 50.9, 51.39, -34.29, 294.92, 4.57, -81.89,
# #             6.0, 2.0, 2.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 3.0, 0.0, -329.22],
# #            [datetime.datetime(2020, 3, 17, 22, 41, 5), 0.0, 100.0, 16.51, 69.53, 832.16, 37.09, 66.17, 50.29, 51.55, -34.21, 294.38, 4.58,
# #             -80.99, 6.0, 2.0, 2.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 3.0, 0.0, -328.59],
# #            [datetime.datetime(2020, 3, 17, 22, 41, 8), 0.0, 100.0, 16.43, 67.83, 831.66, 36.86, 65.78, 50.55, 51.61, -34.14, 294.65, 4.49, -81.09,
# #             6.0, 2.0, 2.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 3.0, 0.0, -328.79],
# #            [datetime.datetime(2020, 3, 17, 22, 41, 11), 0.0, 100.0, 16.53, 66.09, 831.12, 36.57, 65.26, 50.53, 53.84, -34.01, 293.93, 4.46,
# #             -80.71, 6.0, 2.0, 2.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 3.0, 0.0, -327.94],
# #            [datetime.datetime(2020, 3, 17, 22, 41, 15), 0.0, 100.0, 16.42, 64.59, 830.65, 36.29, 66.98, 49.83, 54.2, -33.95, 294.07, 4.45, -80.32,
# #             6.0, 2.0, 2.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 3.0, 0.0, -328.02],
# #            [datetime.datetime(2020, 3, 17, 22, 41, 18), 0.0, 100.0, 16.46, 63.24, 830.2, 36.08, 67.33, 49.16, 54.31, -33.89, 294.17, 4.59,
# #             -80.49, 6.0, 2.0, 2.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 3.0, 0.0, -328.06], [datetime.datetime(2020, 3, 17, 22, 41, 21), 0.0, 100.0, 16.54, 62.05, 829.83, 35.89, 68.2, 48.82, 53.99, -33.84, 294.56, 4.46, -81.01, 6.0, 2.0, 2.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 3.0, 0.0, -328.4], [datetime.datetime(2020, 3, 17, 22, 41, 25), 0.0, 100.0, 16.53, 61.02, 829.51, 35.73, 67.64, 48.3, 53.9, -33.78, 294.04, 4.58, -80.49, 6.0, 2.0, 2.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 3.0, 0.0, -327.82], [datetime.datetime(2020, 3, 17, 22, 41, 28), 0.0, 100.0, 16.3, 60.16, 829.19, 35.63, 67.08, 48.19, 53.9, -33.72, 293.47, 4.45, -80.51, 6.0, 2.0, 2.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 3.0, 0.0, -327.19], [datetime.datetime(2020, 3, 17, 22, 41, 31), 0.0, 100.0, 16.65, 59.42, 828.88, 35.42, 66.72, 47.92, 54.09, -33.68, 293.89, 4.47, -80.37, 6.0, 2.0, 2.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 3.0, 0.0, -327.58], [datetime.datetime(2020, 3, 17, 22, 41, 35), 0.0, 100.0, 16.45, 58.81, 828.71, 35.15, 66.03, 47.48, 53.91, -33.65, 293.75, 4.58, -80.59, 6.0, 2.0, 2.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 3.0, 0.0, -327.4], [datetime.datetime(2020, 3, 17, 22, 41, 38), 0.0, 100.0, 16.31, 58.29, 828.56, 35.11, 65.5, 49.3, 54.28, -33.61, 293.65, 4.38, -80.22, 6.0, 2.0, 2.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 3.0, 0.0, -327.26], [datetime.datetime(2020, 3, 17, 22, 41, 41), 0.0, 100.0, 16.51, 57.88, 828.47, 34.98, 64.98, 49.16, 54.39, -33.54, 293.63, 4.56, -80.69, 6.0, 2.0, 2.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 3.0, 0.0, -327.17]]
#
# list = [datetime(2020, 3, 17, 22, 40, 55), 0.0, 100.0, 17.1, 74.78, 833.52, 37.94, 67.15, 51.76, 51.33, -34.48, 271.71, 5.76, -96.93, 6.0, 2.0, 2.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 3.0, 0.0, -306.18]
# canvi_mes = 0
#
#
# def sheet(list) :
#   y = list[0].year-2000
#   m = list[0].month
#   d = list[0].day
#
#   if m>=10 :
#     sheet = str(m) + str(y)
#   else :
#     sheet = '0'+str(m) + str(y)
#   return sheet,y,m,d
#
#
#
# wb = Workbook()
# jl = sheet(example[0])
# ws1 = wb.new_sheet(jl)
#
# for instant in example :
#   sheet,y,m,d = sheet(instant)
#   dies = monthrange(y,m)[1]
#
#   if d == dies :
#     canvi_mes = 1
#   if d == 1 and canvi_mes:
#     canvi_mes = 0
#     ws1 = wb.new_sheet(sheet)
#     for i in range(len(name)):
#       ws1.cell(row=1,column = i+1).value = name[i]
#   for val in range(len(instant)):
#     ws1.cell(row=2, column=val + 1).value = instant[val]
#
#
#
#
#
# for i in range(len(name)):
#   ws1.cell(row=1,column = i+1).value = name[i]
#
#
# for k in range (len(example)) :
#   year = int(example[k][0][:4])
#   month = int(example[k][0][5:7])
#   day = int(example[k][0][8:11])
#   days = monthrange(year,month)[1]
#
#
# wb.save(dest_filename)
#
# workbook = xlsxwriter.Workbook('OTR.xlsx')
# worksheet = workbook.add_worksheet()
# for i in range(len(name)):
#   # print(alpha[i]+str(i+1))
#   worksheet.write(1,i,name[i])
# workbook.close()

k = [datetime(2020, 3, 17, 22, 40, 55), 0.0, 100.0, 17.1, 74.78, 833.52, 37.94, 67.15, 51.76, 51.33, -34.48, 271.71, 5.76, -96.93, 6.0, 2.0, 2.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 2.0, 4.0, 3.0, 0.0, -306.18]

def sheet(list) :
  y = list[0].year-2000
  m = list[0].month
  d = list[0].day

  if m>=10 :
    sheet = str(m) + str(y)
  else :
    sheet = '0'+str(m) + str(y)
  return sheet,y,m,d



llista = [[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5],[1,2,3,4,5]]

for i in range(len(llista)):
  print(i)
